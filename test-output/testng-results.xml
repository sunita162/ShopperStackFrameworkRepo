<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-12T22:13:43 BST" name="ShoppersStack Automation Suite" finished-at="2024-05-12T22:14:23 BST" duration-ms="39646">
    <groups>
    </groups>
    <test started-at="2024-05-12T22:13:43 BST" name="ShoppersStack Test" finished-at="2024-05-12T22:14:23 BST" duration-ms="39646">
      <class name="shopperstack.testcases.Register">
        <test-method is-config="true" signature="setup()[pri:0, instance:shopperstack.testcases.Register@140c9f39]" started-at="2024-05-12T22:13:44 BST" name="setup" finished-at="2024-05-12T22:13:47 BST" duration-ms="3656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAccountWithoutFillingAnyDetails()[pri:0, instance:shopperstack.testcases.Register@140c9f39]" started-at="2024-05-12T22:13:47 BST" name="verifyRegisteringAccountWithoutFillingAnyDetails" finished-at="2024-05-12T22:13:47 BST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountWithoutFillingAnyDetails -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:shopperstack.testcases.Register@140c9f39]" started-at="2024-05-12T22:13:47 BST" name="tearDown" finished-at="2024-05-12T22:13:48 BST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:shopperstack.testcases.Register@140c9f39]" started-at="2024-05-12T22:13:48 BST" name="setup" finished-at="2024-05-12T22:13:51 BST" duration-ms="3261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAnAccountWithMandatoryFields()[pri:1, instance:shopperstack.testcases.Register@140c9f39]" started-at="2024-05-12T22:13:51 BST" name="verifyRegisteringAnAccountWithMandatoryFields" finished-at="2024-05-12T22:13:52 BST" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAnAccountWithMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:shopperstack.testcases.Register@140c9f39]" started-at="2024-05-12T22:13:52 BST" name="tearDown" finished-at="2024-05-12T22:13:52 BST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:shopperstack.testcases.Register@140c9f39]" started-at="2024-05-12T22:13:52 BST" name="setup" finished-at="2024-05-12T22:13:55 BST" duration-ms="3267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifyRegisteringAccountWithExistingEmailAdress()[pri:2, instance:shopperstack.testcases.Register@140c9f39]" started-at="2024-05-12T22:13:55 BST" name="verifyRegisteringAccountWithExistingEmailAdress" finished-at="2024-05-12T22:13:55 BST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegisteringAccountWithExistingEmailAdress -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:shopperstack.testcases.Register@140c9f39]" started-at="2024-05-12T22:13:55 BST" name="tearDown" finished-at="2024-05-12T22:13:55 BST" duration-ms="139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- shopperstack.testcases.Register -->
      <class name="shopperstack.testcases.Login">
        <test-method is-config="true" signature="setUp()[pri:0, instance:shopperstack.testcases.Login@4d910fd6]" started-at="2024-05-12T22:13:56 BST" name="setUp" finished-at="2024-05-12T22:13:59 BST" duration-ms="3316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String, java.lang.String)[pri:1, instance:shopperstack.testcases.Login@4d910fd6]" started-at="2024-05-12T22:13:59 BST" name="verifyLoginWithValidCredentials" data-provider="validCredentialsSupplier" finished-at="2024-05-12T22:13:59 BST" duration-ms="263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[tester2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[India@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:shopperstack.testcases.Login@4d910fd6]" started-at="2024-05-12T22:13:59 BST" name="tearDown" finished-at="2024-05-12T22:13:59 BST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:shopperstack.testcases.Login@4d910fd6]" started-at="2024-05-12T22:13:59 BST" name="setUp" finished-at="2024-05-12T22:14:03 BST" duration-ms="3188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidEmailAndInvalidPassword()[pri:2, instance:shopperstack.testcases.Login@4d910fd6]" started-at="2024-05-12T22:14:03 BST" name="verifyLoginWithValidEmailAndInvalidPassword" finished-at="2024-05-12T22:14:03 BST" duration-ms="335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidEmailAndInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:shopperstack.testcases.Login@4d910fd6]" started-at="2024-05-12T22:14:03 BST" name="tearDown" finished-at="2024-05-12T22:14:03 BST" duration-ms="125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:shopperstack.testcases.Login@4d910fd6]" started-at="2024-05-12T22:14:03 BST" name="setUp" finished-at="2024-05-12T22:14:06 BST" duration-ms="3049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidEmailAndValidPassword()[pri:3, instance:shopperstack.testcases.Login@4d910fd6]" started-at="2024-05-12T22:14:06 BST" name="verifyLoginWithInvalidEmailAndValidPassword" finished-at="2024-05-12T22:14:06 BST" duration-ms="242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidEmailAndValidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:shopperstack.testcases.Login@4d910fd6]" started-at="2024-05-12T22:14:06 BST" name="tearDown" finished-at="2024-05-12T22:14:06 BST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- shopperstack.testcases.Login -->
      <class name="shopperstack.testcases.Search">
        <test-method is-config="true" signature="setup()[pri:0, instance:shopperstack.testcases.Search@26275bef]" started-at="2024-05-12T22:14:06 BST" name="setup" finished-at="2024-05-12T22:14:08 BST" duration-ms="1888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearchWithValidProduct()[pri:1, instance:shopperstack.testcases.Search@26275bef]" started-at="2024-05-12T22:14:08 BST" name="verifySearchWithValidProduct" finished-at="2024-05-12T22:14:11 BST" duration-ms="2434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithValidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:shopperstack.testcases.Search@26275bef]" started-at="2024-05-12T22:14:11 BST" name="tearDown" finished-at="2024-05-12T22:14:11 BST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:shopperstack.testcases.Search@26275bef]" started-at="2024-05-12T22:14:11 BST" name="setup" finished-at="2024-05-12T22:14:13 BST" duration-ms="1686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearchWithInvalidProduct()[pri:2, instance:shopperstack.testcases.Search@26275bef]" started-at="2024-05-12T22:14:13 BST" name="verifySearchWithInvalidProduct" finished-at="2024-05-12T22:14:23 BST" duration-ms="10057" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"#search"}
  (Session info: chrome=124.0.6367.158)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'VEDANT-HONOR', ip: '192.168.0.25', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.158, chrome: {chromedriverVersion: 124.0.6367.118 (3af29d4696f..., userDataDir: C:\Users\girix\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60838}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bf3c2754a7ea8554252700c7c042caf3
*** Element info: {Using=id, value=search}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"#search"}
  (Session info: chrome=124.0.6367.158)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'VEDANT-HONOR', ip: '192.168.0.25', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.5'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.158, chrome: {chromedriverVersion: 124.0.6367.118 (3af29d4696f..., userDataDir: C:\Users\girix\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:60838}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bf3c2754a7ea8554252700c7c042caf3
*** Element info: {Using=id, value=search}
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at shopperstack.testcases.Search.verifySearchWithInvalidProduct(Search.java:55)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithInvalidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:shopperstack.testcases.Search@26275bef]" started-at="2024-05-12T22:14:23 BST" name="tearDown" finished-at="2024-05-12T22:14:23 BST" duration-ms="169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- shopperstack.testcases.Search -->
    </test> <!-- ShoppersStack Test -->
  </suite> <!-- ShoppersStack Automation Suite -->
</testng-results>
